нажимай почаще Cntl+ALt+L

*AbstractAccount*
14: я не помню исключения в этот день или нет. если нет обрати внимание на 14ю строку тут потом должен быть выброс
исключения
18: для отладки может это и неплохо. но ты всегда можешь посмотреть в дебаге. в целом же такую инфу в доменных
объектах печатать не стоит. код теряет в читабельности
43: accountIndex += 1; -> accountIndex++; или еще короче:
    accountNumber = accountIndex++;

*CheckingAccount*
убирай все system.out код не читабелен.

*Client*
17, 19-22: зачем клиенту поле accountType? мне кажется это не по месту. сам енум тоже напрямую к клиенту не относится.
27: поле не должно быть публичным. делай геттер.
35: почему геттер ничего не возвращает. а печатает. название расходится с телом метода
49: новый индекс никак не запоминается во вновь созданном объекте. в таком виде это скорее счечик созданных объектов.
53: как мне быть если я хочу создать клиента только с 1 сберегательным счетом?
66: конструкция сигнализирует о плохом дизайне конструкторов.
70: а что если переданный аккаунт не содержится у клиета? нужна проверка
76: почему 0? может лучше посчитать общий баланс по всем счетам?
89: а нужно ли тут выставить овердрафт?
97: если программа зашла сюда то тип передан неверно - это исключительная ситуация. нужно о ней просигнализировть

*BankApplication*
18: заведи переменную для аккаунтов, выставь у нее все значения. и лишь потом добавляй.
35-44: метод слишком частный. ты знаешь заранее что клиента всего 2, что счетов тоже по два. используй метод size()
у листа.

код больше процедурный а-ля паскаль чем объектноориентированный
