*Account*

в интерфейсах и так все публично. модификатор public тут избыточен
10: с возможностями современных средств разарботки нет смысла сокращать названия методов. Это усложняет чтение.
getAccNumber -> getAccountNumber

*AbstractAccount*

8: зачем это поле публично, если есть геттер? прячь его. именуй полно, не нужно сокращать.
10: задумка отличная) но тоже делай приватным.
12: стоит проверить на отрицательность.
14: к чему пустая строка?
34:38 отлично!

*SavingAccount*

разберись с пустыми строками. С непревычки выглядит неряшливо )

*CheckingAccount*

можно сделать еще конструктор с овердрафтом. Где геттер на овердрафт?

*Client*

15: именуй полно. Статические поля следует объявлеть выше по тексту обычных полей.
27: по факту клиен еще не создан. вдруг ошибка в конструкторе ниже? логируй создание когда уже конструктор начинает заканчиваться

можно создать еще парочку конструкторов, с именем например. + выставлять какой-то счет активным поумолчанию.

53,57: зачем эти методы? мусор с виду.
61: реализуй

*Bank*

12: избыточный комментарий

*BankApplication*
9: initArray не говорящее название. что array видно и так. наверно это initialDeposits
17, 18: доставай список клиентов через геттер, ты же его для этого и заводил. Доступ по полю - моветон.

по поводу метода модифай - переделай его в работу с циклами. будет более универсально и меньше кода.

48: переменная ii избыточна. путает.
47-73: у тебя одного из немногих правильный тестовый метод. молодец!

75 и далее: форматируй код! его невозможно читать))